{"componentChunkName":"component---node-modules-gatsby-theme-document-src-templates-docs-js","path":"/other-demos/custom-popup","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Custom Popup\",\n  \"description\": \"Feed custom popup component\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"custom-popup\"\n  }, \"Custom Popup\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"popup\"), \" prop to insert your functional component and render a custom popup.\")), mdx(\"h1\", {\n    \"id\": \"code-demo\"\n  }, \"Code Demo\"), mdx(Heatmap, {\n    data: [{\n      date: new Date(\"1.1.2021 01:51\"),\n      count: 25\n    }, {\n      date: new Date(\"1.2.2021 14:51\"),\n      count: 4\n    }, {\n      date: new Date(\"1.3.2021 14:51\"),\n      count: 12\n    }, {\n      date: new Date(\"1.3.2021 16:51\"),\n      count: 12\n    }, {\n      date: new Date(\"1.3.2021 16:23\"),\n      count: 22\n    }, {\n      date: new Date(\"1.4.2021 16:51\"),\n      count: 102\n    }],\n    valueColumn: \"count\",\n    dateColumn: \"date\",\n    popup: function popup(heatmap) {\n      return mdx(Card, {\n        mdxType: \"Card\"\n      }, mdx(CardHeader, {\n        title: \"My Custom Popup\",\n        mdxType: \"CardHeader\"\n      }), mdx(CardContent, {\n        mdxType: \"CardContent\"\n      }, \"Total Sum: \", heatmap.data.value, mdx(Divider, {\n        mdxType: \"Divider\"\n      }), \"Total Records: \", heatmap.data.minutes.filter(function (r) {\n        return r.data.date;\n      }).length));\n    },\n    mdxType: \"Heatmap\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import React from \\\"react\\\";\\nimport { Heatmap } from \\\"react-hour-heatmap\\\";\\n\\nexport default function App() {\\n  return (\\n    <div className=\\\"App\\\">\\n      <Heatmap\\n        data={[\\n          {date: new Date(\\\"1.1.2021 01:51\\\"), count: 25 },\\n          {date: new Date(\\\"1.2.2021 14:51\\\"), count: 4 },\\n          {date: new Date(\\\"1.3.2021 14:51\\\"), count: 12 },\\n          {date: new Date(\\\"1.3.2021 16:51\\\"), count: 12 },\\n          {date: new Date(\\\"1.3.2021 16:23\\\"), count: 22 },\\n          {date: new Date(\\\"1.4.2021 16:51\\\"), count: 102 }\\n        ]}\\n        valueColumn=\\\"count\\\"\\n        dateColumn=\\\"date\\\"\\n        popup={\\n          (heatmap) => (\\n            <Card>\\n              <CardHeader title=\\\"My Custom Popup\\\" />\\n              <CardContent>\\n                Sum: {heatmap.data.value}\\n                <Divider />\\n                Total # of Records Binned: {heatmap.data.minutes.filter(r => r.data.date).length}\\n              </CardContent>\\n            </Card>\\n          )\\n        }\\n/>\\n    </div>\\n  );\\n}\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#custom-popup","title":"Custom Popup"},{"url":"#code-demo","title":"Code Demo"}]},"frontmatter":{"title":"Custom Popup","description":"Feed custom popup component"}}},"pageContext":{"id":"b5d5fe70-0217-5eeb-bc85-d5962ec454a5"}},"staticQueryHashes":["2575348879","2936798523","2940813629"]}